// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BLOCKED
}

enum SwarmStatus {
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum NotificationStatus {
  READ
  UNREAD
}

enum SwarmResultsStatus {
  APPROVED
  REJECTED
  PENDING
}

enum SettingsStatus {
  ENABLED
  DISABLED
}

enum VisibilityStatus {
  PRIVATE
  PUBLIC
}

enum CategoryType {
  PUBLIC
  PRIVATE
}

model User {
  id            Int            @id @default(autoincrement())
  first_name    String         @db.VarChar(255)
  last_name     String         @db.VarChar(255)
  email         String         @unique @db.VarChar(255)
  phone         String?        @unique
  created_at    DateTime       @default(now())
  status        UserStatus     @default(ACTIVE)
  profile       Profile?
  swarms        Swarm[]
  notifications Notification[]
}

model Profile {
  id                   Int        @id @default(autoincrement())
  profile_url          String?
  notification_enabled Boolean    @default(true)
  user                 User       @relation(fields: [user_id], references: [id])
  user_id              Int        @unique
  status               UserStatus @default(ACTIVE)
  created_at           DateTime   @default(now())
  settings             Settings?
}

model Swarm {
  id               Int               @id @default(autoincrement())
  title            String            @db.VarChar(255)
  category         String            @db.VarChar(255)
  description      String
  user             User              @relation(fields: [user_id], references: [id])
  user_id          Int
  status           SwarmStatus       @default(IN_PROGRESS)
  mturk_enabled    Boolean           @default(false)
  visibility       VisibilityStatus  @default(PUBLIC)
  created_at       DateTime          @default(now())
  swarm_result     SwarmResults?
  swarm_activities SwarmActivities[]
}

model Notification {
  id         Int                @id @default(autoincrement())
  title      String             @db.VarChar(255)
  content    String
  created_at DateTime           @default(now())
  status     NotificationStatus @default(UNREAD)
  user       User[]
}

model SwarmResults {
  id                 Int                @id @default(autoincrement())
  swarm              Swarm              @relation(fields: [swarm_id], references: [id])
  swarm_id           Int                @unique
  mturk_hits_results Json
  swarm_ai_results   Json
  status             SwarmResultsStatus @default(PENDING)
  created_at         DateTime           @default(now())
}

model Settings {
  id                    Int            @id @default(autoincrement())
  profile_id            Int            @unique
  user                  Profile        @relation(fields: [profile_id], references: [id])
  status                SettingsStatus @default(ENABLED)
  notification_settings Json
  created_at            DateTime       @default(now())
}

model SwarmActivities {
  id         Int      @id @default(autoincrement())
  swarm_id   Int
  swarm      Swarm    @relation(fields: [swarm_id], references: [id])
  created_at DateTime @default(now())
}
